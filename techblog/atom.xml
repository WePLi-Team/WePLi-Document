<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wepli.site/techblog</id>
    <title>WePLi Blog</title>
    <updated>2025-02-22T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wepli.site/techblog"/>
    <subtitle>WePLi Blog</subtitle>
    <icon>https://wepli.site/img/favicon.ico</icon>
    <rights>Copyright © 2025 Facebook, Inc.</rights>
    <entry>
        <title type="html"><![CDATA[Composable을 Bitmap으로 변환하는 방법]]></title>
        <id>https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap</id>
        <link href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap"/>
        <updated>2025-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Composable을 Bitmap으로 변환하는 과정에서 발생한 이슈와 해결 과정에 대해 소개합니다.]]></summary>
        <content type="html"><![CDATA[<p>Composable을 Bitmap으로 변환하는 과정에서 발생한 이슈와 해결 과정에 대해 소개합니다.</p>
<!-- -->
<p>아래 글은 Jetpack Compose로 작성한 명함(또는 카드) UI를 이미지로 저장하고 공유하는 기능을 구현하면서 겪은 문제와 해결 과정을 정리한 글입니다.</p>
<p>Composable → Bitmap 변환 과정과, 하드웨어 가속 / isLaidOut / 블러 등의 이슈에 대해 정리하였습니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="기능-소개">기능 소개<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#%EA%B8%B0%EB%8A%A5-%EC%86%8C%EA%B0%9C" class="hash-link" aria-label="Direct link to 기능 소개" title="Direct link to 기능 소개">​</a></h3>
<img src="https://wepli.site/assets/images/namecard_flow-bd3f14fb91b8b01e62b0f339f5466b54.png" alt="Loading">
<br>
<p>현재 사용자의 음악 취향이 드러나는 명함을 생성할 수 있는 기능을 개발하고 있습니다.
앱에서 생성한 명함은 이미지로 변환 되어 갤러리에 저장하거나, SNS로 공유할 수 있도록 할 예정이었습니다.</p>
<p>기존 View 시절에는 drawToBitmap() 등으로 쉽게 처리했지만, Jetpack Compose로 UI를 작성하면 동일한 방식이 바로 적용되지 않아, 여러 문제를 해결해야 했습니다.</p>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="drawtobitmap을-활용��한-방식">drawToBitmap()을 활용한 방식<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#drawtobitmap%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%B0%A9%EC%8B%9D" class="hash-link" aria-label="Direct link to drawToBitmap()을 활용한 방식" title="Direct link to drawToBitmap()을 활용한 방식">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="초기-아이디어-">초기 아이디어 💭<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#%EC%B4%88%EA%B8%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4-" class="hash-link" aria-label="Direct link to 초기 아이디어 💭" title="Direct link to 초기 아이디어 💭">​</a></h4>
<p>처음엔 Compose 내에 있는 Composable을 별도의 <code>ComposeView</code>에 그린 뒤, <code>drawToBitmap()</code>을 호출해서 Bitmap을 얻는 방식이었습니다.</p>
<p>이 방법으로 간단하게 Composable을 Bitmap으로 변환할 수 있었으나 여러가지 이슈가 존재했습니다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="코드-예시">코드 예시<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#%EC%BD%94%EB%93%9C-%EC%98%88%EC%8B%9C" class="hash-link" aria-label="Direct link to 코드 예시" title="Direct link to 코드 예시">​</a></h4>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token annotation builtin" style="color:hsl(119, 34%, 47%)">@Composable</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token keyword" style="color:hsl(301, 63%, 40%)">fun</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">convertToBitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    targetContent</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token annotation builtin" style="color:hsl(119, 34%, 47%)">@Composable</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(221, 87%, 60%)">-&gt;</span><span class="token plain"> Unit</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(221, 87%, 60%)">-&gt;</span><span class="token plain"> Bitmap</span><span class="token operator" style="color:hsl(221, 87%, 60%)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> context </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> LocalContext</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">current</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> composeView </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> remember </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">ComposeView</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">context</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">fun</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">captureBitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> Bitmap</span><span class="token operator" style="color:hsl(221, 87%, 60%)">?</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token comment" style="color:hsl(230, 4%, 64%)">// composeView가 아직 레이아웃되지 않았다면 null을 반환</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">return</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">composeView</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">isLaidOut</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            composeView</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">drawToBitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">else</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token function" style="color:hsl(221, 87%, 60%)">AndroidView</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        factory </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            composeView</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">apply</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">                </span><span class="token comment" style="color:hsl(230, 4%, 64%)">// 여기에서 targetContent를 실제로 그려주기</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">                setContent </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">targetContent</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token comment" style="color:hsl(230, 4%, 64%)">// 필요한 시점에 captureBitmap()을 호출해 Bitmap을 얻음</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">return</span><span class="token plain"> </span><span class="token operator" style="color:hsl(221, 87%, 60%)">::</span><span class="token plain">captureBitmap</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>convertToBitmap 함수는 별도 ComposeView를 생성해, 원하는 Composable(targetContent)를 그립니다.</li>
<li>실제 뷰가 레이아웃을 마쳐야 drawToBitmap()을 안전하게 호출할 수 있으므로, isLaidOut 체크를 추가했습니다.</li>
</ul>
<br>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p><strong>isLaidOut</strong> 은 View(또는 ComposeView)가 레이아웃 과정을 모두 마쳐서 실제 화면 크기가 확정되었는지를 알려주는 플래그입니다.</p><p>이 값이 true여야 drawToBitmap() 등을 통해 안전하게 뷰를 Bitmap으로 변환할 수 있으며, 아직 레이아웃이 결정되지 않은 상태에서 캡처를 시도하면 <strong>IllegalStateException</strong>이 발생할 수 있습니다.</p></div></div>
<br>
<p>이는 아래와 같이 호출할 수 있습니다.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> nameCardBitmapGenerator </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> convertToBitmap </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token comment" style="color:hsl(230, 4%, 64%)">// Bitmap으로 변환할 Composable</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token function" style="color:hsl(221, 87%, 60%)">NameCardComponent</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">nameCardInfo </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> state</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">nameCardInfo</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token comment" style="color:hsl(230, 4%, 64%)">// 필요한 시점(예: 버튼 클릭 등)에 호출</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> bitmap</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> Bitmap</span><span class="token operator" style="color:hsl(221, 87%, 60%)">?</span><span class="token plain"> </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> nameCardBitmapGenerator</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">invoke</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Bitmap 변환은 잘 되는 듯 했으나 하드웨어 가속 사용시 변환 불가한 이슈, Blur 미적용 이슈 등 여러 문제가 뒤따랐습니다.</p>
<br>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="1️⃣-하드웨어-가속-사용시-변환-불가한-이슈">1️⃣ 하드웨어 가속 사용시 변환 불가한 이슈<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#1%EF%B8%8F%E2%83%A3-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EA%B0%80%EC%86%8D-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EB%B3%80%ED%99%98-%EB%B6%88%EA%B0%80%ED%95%9C-%EC%9D%B4%EC%8A%88" class="hash-link" aria-label="Direct link to 1️⃣ 하드웨어 가속 사용시 변환 불가한 이슈" title="Direct link to 1️⃣ 하드웨어 가속 사용시 변환 불가한 이슈">​</a></h4>
<p>Coil을 사용해서 이미지를 로드하면 기본적으로 하드웨어 가속 옵션을 사용하게 됩니다.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token keyword" style="color:hsl(301, 63%, 40%)">class</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">DefaultRequestOptions</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token comment" style="color:hsl(230, 4%, 64%)">/*...*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> allowHardware</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> Boolean </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> </span><span class="token boolean" style="color:hsl(35, 99%, 36%)">true</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Coil의 DefaultRequestOptions 클래스를 보면 allowHardware 옵션의 기본 값이 true인 것을 알 수 있습니다.</p></div></div>
<p>하드웨어 가속을 사용하는 상태에서 drawToBitmap()을 호출하면, 소프트웨어 Bitmap으로 직접 복사하기가 불가능해서 예외가 발생합니다.</p>
<p><strong>해결</strong> :<br>
<!-- -->명함 생성 기능에서는 이미지를 대량으로 로드할 필요가 없었기에, 소프트웨어 가속을 사용하도록 설정을 변경했습니다.<br>
<!-- -->성능 저하가 있을 수 있지만, 실제 명함 UI에서 이미지를 1~2장 정도만 다뤘으므로 영향이 크지 않았습니다.</p>
<br>
<br>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2️⃣-blur가-bitmap으로-변환이-되지-않는-이슈">2️⃣ Blur가 Bitmap으로 변환이 되지 않는 이슈<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#2%EF%B8%8F%E2%83%A3-blur%EA%B0%80-bitmap%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98%EC%9D%B4-%EB%90%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EC%9D%B4%EC%8A%88" class="hash-link" aria-label="Direct link to 2️⃣ Blur가 Bitmap으로 변환이 되지 않는 이슈" title="Direct link to 2️⃣ Blur가 Bitmap으로 변환이 되지 않는 이슈">​</a></h4>
<p>두 번째 이슈는 Blur가 적용된 Composable을 캡쳐하면, Blur가 적용되지 않은 상태로 Bitmap이 추출된다는 점이었습니다.</p>
<div align="center"><img src="https://wepli.site/assets/images/namecard_blur-b9daf28c260f052d5e8fc921789f1de8.png" alt="Loading" style="width:400px"></div>
<br>
<p>아래와 같이 여러 명함 디자인 중 Blur를 사용하는 케이스가 많았는데, 캡쳐 결과물에는 그 블러 효과가 전혀 나타나지 않아 난감했습니다.</p>
<img src="https://wepli.site/assets/images/namecard_design-8fbb10ee77f5b5df7aa18a78afa6d604.png" alt="Loading">
<br>
<p>이를 해결하기 위해 Modifier.blur() 대신 다른 Blur 라이브러리(cloudy, haze) 등을 사용해봤는데도 문제는 동일했습니다.
결국 Blur 자체의 문제라기보다는, 캡쳐 방법의 문제임을 알게 되었습니다.</p>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="graphicslayer를-이용한-새로운-로직">graphicsLayer를 이용한 새로운 로직<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#graphicslayer%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%A1%9C%EC%A7%81" class="hash-link" aria-label="Direct link to graphicsLayer를 이용한 새로운 로직" title="Direct link to graphicsLayer를 이용한 새로운 로직">​</a></h3>
<p>위 문제를 해결하기 위해, 공식 문서에서 안내한 graphicsLayer 기반의 캡쳐 방식을 도입했습니다.</p>
<p>graphicsLayer.toImageBitmap()를 사용하면, Blur가 GPU에서 처리되는 과정을 소프트웨어 버퍼로 기록할 수 있어 Blur가 적용된 상태를 보다 안정적으로 캡쳐할 수 있었습니다.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> graphicsLayer </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">rememberGraphicsLayer</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token function" style="color:hsl(221, 87%, 60%)">NameCardComponent3</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    nameCardInfo </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> state</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">nameCardInfo</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    modifier </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> Modifier</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">align</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">Alignment</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">CenterHorizontally</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">drawWithContent</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            graphicsLayer</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">record</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">                </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">this</span><span class="token label symbol" style="color:hsl(5, 74%, 59%)">@drawWithContent</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">drawContent</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            </span><span class="token function" style="color:hsl(221, 87%, 60%)">drawLayer</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">graphicsLayer</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">graphicsLayer</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">toImageBitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="bitmap-변환">Bitmap 변환<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#bitmap-%EB%B3%80%ED%99%98" class="hash-link" aria-label="Direct link to Bitmap 변환" title="Direct link to Bitmap 변환">​</a></h4>
<p>graphicsLayer.toImageBitmap()는 <strong>ImageBitmap</strong>을 반환하는데, 이를 곧바로 파일로 저장하거나 공유할 수는 없습니다.</p>
<p>따라서 아래와 같은 확장 함수를 만들어, ImageBitmap → Bitmap 변환 과정을 거쳤습니다.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token keyword" style="color:hsl(301, 63%, 40%)">fun</span><span class="token plain"> ImageBitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">toAndroidBitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> Bitmap </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token comment" style="color:hsl(230, 4%, 64%)">// 1. Compose의 PixelMap 가져오기</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> pixelMap </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">this</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">toPixelMap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token comment" style="color:hsl(230, 4%, 64%)">// 2. PixelMap 크기에 맞는 빈 Bitmap 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> bitmap </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> Bitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">createBitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">pixelMap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">width</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> pixelMap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">height</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> Bitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">Config</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">ARGB_8888</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token comment" style="color:hsl(230, 4%, 64%)">// 3. PixelMap을 순회하며 Bitmap에 픽셀 쓰기</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">y </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">in</span><span class="token plain"> </span><span class="token number" style="color:hsl(35, 99%, 36%)">0</span><span class="token plain"> until pixelMap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">height</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">x </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">in</span><span class="token plain"> </span><span class="token number" style="color:hsl(35, 99%, 36%)">0</span><span class="token plain"> until pixelMap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">width</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">val</span><span class="token plain"> color</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> Color </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> pixelMap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">[</span><span class="token plain">x</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            bitmap</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">setPixel</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> color</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">toArgb</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">return</span><span class="token plain"> bitmap</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>이렇게 최종적으로 Blur가 적용된 Bitmap을 얻을 수 있었습니다.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>graphicsLayer.toImageBitmap()는 suspend 함수이므로, Coroutine 내에서 호출해야 합니다.<br>
<!-- -->또한 UI가 완전히 렌더링된 뒤에 호출해야 올바른 결과물을 얻을 수 있습니다.</p></div></div>
<br>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bottomsheet에서-bitmap-보여주기">BottomSheet에서 Bitmap 보여주기<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#bottomsheet%EC%97%90%EC%84%9C-bitmap-%EB%B3%B4%EC%97%AC%EC%A3%BC%EA%B8%B0" class="hash-link" aria-label="Direct link to BottomSheet에서 Bitmap 보여주기" title="Direct link to BottomSheet에서 Bitmap 보여주기">​</a></h3>
<p>마지막으로, 생성된 Bitmap을 BottomSheet에 표시할 수 있게 구현하였습니다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="문제점">문제점<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#%EB%AC%B8%EC%A0%9C%EC%A0%90" class="hash-link" aria-label="Direct link to 문��제점" title="Direct link to 문제점">​</a></h4>
<ul>
<li>graphicsLayer.toImageBitmap()은 비동기(suspend) 로직입니다.</li>
<li>따라서, 곧바로 BottomSheet를 열어버리면, Bitmap이 준비되지 않은 상태일 수 있습니다.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="해결-방법">해결 방법<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="Direct link to 해결 방법" title="Direct link to 해결 방법">​</a></h4>
<ol>
<li>공유하기 버튼 클릭 시 -&gt; Bitmap 생성 (graphicsLayer.toImageBitmap())</li>
<li>Bitmap 생성이 완료되면 state로 저장</li>
<li>BottomSheet에서는 미리 준비된 Bitmap을 안전하게 사용할 수 있음</li>
</ol>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token keyword" style="color:hsl(301, 63%, 40%)">var</span><span class="token plain"> nameCardBitmap </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">by</span><span class="token plain"> remember </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> mutableStateOf</span><span class="token operator" style="color:hsl(221, 87%, 60%)">&lt;</span><span class="token plain">ImageBitmap</span><span class="token operator" style="color:hsl(221, 87%, 60%)">?</span><span class="token operator" style="color:hsl(221, 87%, 60%)">&gt;</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token keyword" style="color:hsl(301, 63%, 40%)">null</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token function" style="color:hsl(221, 87%, 60%)">WepliBasicButton</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token comment" style="color:hsl(230, 4%, 64%)">/*...*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    onClick </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        coroutineScope</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">launch</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            </span><span class="token comment" style="color:hsl(230, 4%, 64%)">// 사용자가 클릭한 시점에 Bitmap을 캡쳐</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            nameCardBitmap </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">captureNameCard</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">graphicsLayer</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">            </span><span class="token function" style="color:hsl(221, 87%, 60%)">sendAction</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">NameCardResultIntent</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">ShowShareBottomSheet</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token boolean" style="color:hsl(35, 99%, 36%)">true</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token keyword" style="color:hsl(301, 63%, 40%)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">isShownShareBottomSheet</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    nameCardBitmap</span><span class="token operator" style="color:hsl(221, 87%, 60%)">?</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token function" style="color:hsl(221, 87%, 60%)">let</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token function" style="color:hsl(221, 87%, 60%)">NameCardShareBottomSheet</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">nameCardBitmap </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> it</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> sendAction </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> sendAction</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>동작 결과</strong></p>
<div align="center"><img src="https://wepli.site/assets/images/namecard_gif-2581ab70cb2fb602ee63fa7fcad87d47.gif" alt="Loading" style="width:200px"></div>
<br>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="마무리">마무리<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#%EB%A7%88%EB%AC%B4%EB%A6%AC" class="hash-link" aria-label="Direct link to 마무리" title="Direct link to 마무리">​</a></h3>
<p>이번 글에서는 Composable을 Bitamp으로 변환하고, 이를 저장하거나 공유하는 기능을 구현하면서 마주한 다양한 이슈들을 정리했습니다.</p>
<ul>
<li>하드웨어 가속이 켜진 이미지를 소프트웨어 비트맵으로 변환할 수 없는 문제</li>
<li>isLaidOut 플래그를 이용해 레이아웃이 완료된 뒤에만 캡처해야 하는 이슈</li>
<li>Blur가 전혀 반영되지 않고 원본 상태로 캡처되는 문제</li>
<li>graphicsLayer.toImageBitmap()가 suspend 함수이므로, UI 흐름(예: BottomSheet)과의 타이밍을 잘 맞춰야 하는 점</li>
</ul>
<p>이러한 문제들을 해결하는 과정에서,</p>
<ol>
<li>소프트웨어 가속 사용</li>
<li>isLaidOut 체크 후 안전한 시점에 drawToBitmap() 호출</li>
<li>Blur 효과를 살리기 위한 graphicsLayer 활용</li>
<li>코루틴을 통한 비동기 처리와 UI 제어(예: BottomSheet 열기 시점 조정)</li>
</ol>
<p>등을 적용했습니다.</p>
<p>Compose가 반복 렌더링(Recomposition)을 통해 UI를 효율적으로 그려주는 장점이 있지만, 이미지 캡쳐처럼 <strong>정확한 시점</strong>과 <strong>렌더링 타입</strong>을 제어해야 하는 기능은 기존 View 대비 고려해야 할 요소들이 많은 것 같습니다.</p>
<p>이번 경험을 통해 쌓은 노하우가, 앞으로 다양한 UI 개발에 있어 큰 도움이 될 것이라 기대합니다.</p>
<p>끝까지 읽어주셔서 감사하며, 앞으로도 Compose 기반 앱 개발에서 발생하는 이슈들을 공유하여, 같은 문제로 고민하는 분들께 도움이 되길 바랍니다.</p>
<br>
<hr>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="reference">Reference<a href="https://wepli.site/techblog/wepli-tech-blog-composable-to-bitmap#reference" class="hash-link" aria-label="Direct link to Reference" title="Direct link to Reference">​</a></h4>
<ul>
<li><a href="https://developer.android.com/develop/ui/compose/graphics/draw/modifiers#composable-to-bitmap" target="_blank" rel="noopener noreferrer">Android 공식 문서 - Graphics modifiers</a></li>
<li><a href="https://stackoverflow.com/questions/74450838/convert-a-composable-view-into-image-in-jetpack-compose" target="_blank" rel="noopener noreferrer">StackOverflow - Convert a composable view into image in Jetpack Compose</a></li>
</ul>]]></content>
        <author>
            <name>Donghyeon Kim</name>
            <uri>https://github.com/dongx0915</uri>
        </author>
        <category label="WePLi" term="WePLi"/>
        <category label="MusicApp" term="MusicApp"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Supabase Json으로 계층 구현하기]]></title>
        <id>https://wepli.site/techblog/wepli-tech-blog-supabase-json</id>
        <link href="https://wepli.site/techblog/wepli-tech-blog-supabase-json"/>
        <updated>2025-02-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Supabase를 사용하면서 View를 사용했을 때의 문제점을 소개합니다.]]></summary>
        <content type="html"><![CDATA[<p>Supabase를 사용하면서 View를 사용했을 때의 문제점을 소개합니다.</p>
<br>
<br>
<!-- -->
<p>WePLi는 현재 서버 프레임워크 없이 Supabase만을 활용해 개발 중입니다.</p>
<p>Supabase는 서버가 없는 동안 임시 대체제로 사용되고 있으며, 추후 실제 서버로 전환할 예정입니다.<br>
<strong>Supabase를 서버로 전환할 때 앱에는 최대한 영향이 없어야한다는 목표</strong>를 가지고 개발에 임하고 있습니다.</p>
<p>앱에 영향이 없으려면 Supabae에서 실제 서버의 응답 구조와 비슷하게 구성을 해야하는데,<br>
<!-- -->여기서 한 가지 문제점이 존재합니다.</p>
<p>관계형 데이터베이스는 기본적으로 <strong>평면적인 테이블 구조</strong>를 사용하기 때문에 <strong>계층 데이터를 표현하기 어렵습니다.</strong><br>
<!-- -->이로 인해 Supabase의 응답 형식과 실제 서버의 응답 구조 사이에 차이가 발생하며, 이 차이가 클수록 실제 서버 전환 시 앱 코드 수정 사항이 많아집니다.</p>
<p>이 글에서는 기존 View 방식의 한계와, <strong>PostgreSQL</strong>의 <em><strong>JSON Aggregation</strong></em> 기능을 활용하여 계층형 데이터 뷰를 구성하는 방법을 소개합니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="기존-view-생성-방식과-그-한계">기존 View 생성 방식과 그 한계<a href="https://wepli.site/techblog/wepli-tech-blog-supabase-json#%EA%B8%B0%EC%A1%B4-view-%EC%83%9D%EC%84%B1-%EB%B0%A9%EC%8B%9D%EA%B3%BC-%EA%B7%B8-%ED%95%9C%EA%B3%84" class="hash-link" aria-label="Direct link to 기존 View 생성 방식과 그 한계" title="Direct link to 기존 View 생성 방식과 그 한계">​</a></h3>
<p>일반적으로 View를 생성할 때는 여러 테이블을 JOIN하여 단순한 평면(Flat) 구조의 데이터를 반환합니다.</p>
<p>예를 들어, <strong>게시글(post)</strong> 에 <strong>작성자(user)</strong> 와 <strong>수록곡(song)</strong> 정보를 함께 포함시키는 경우, 아래와 같이 View를 정의할 수 있습니다.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token keyword" style="color:hsl(301, 63%, 40%)">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">VIEW</span><span class="token plain"> post_view </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">title </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_title</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">contents </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_contents</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_author_id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">email </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_author_email</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">username </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_author_nickname</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">profile_img </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_author_profile_img</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">song_id </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">title </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_title</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">artist_name </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_artist</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">album </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_album</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">cover_img </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_cover</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">href </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_href</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">duration_millis </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_duration</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token keyword" style="color:hsl(301, 63%, 40%)">FROM</span><span class="token plain"> posts p</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">LEFT</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">JOIN</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">public</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token keyword" style="color:hsl(301, 63%, 40%)">user</span><span class="token plain"> u </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">ON</span><span class="token plain"> p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">author </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">LEFT</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">JOIN</span><span class="token plain"> post_bside_track pbt </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">ON</span><span class="token plain"> p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> pbt</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">post_id</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">LEFT</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">JOIN</span><span class="token plain"> song s </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">ON</span><span class="token plain"> pbt</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">song_id </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="주요-문제점">주요 문제점<a href="https://wepli.site/techblog/wepli-tech-blog-supabase-json#%EC%A3%BC%EC%9A%94-%EB%AC%B8%EC%A0%9C%EC%A0%90" class="hash-link" aria-label="Direct link to 주요 문제점" title="Direct link to 주요 문제점">​</a></h3>
<ol>
<li>
<p>계층적 데이터 표현의 부재</p>
<p><img decoding="async" loading="lazy" alt="image" src="https://wepli.site/assets/images/image_1-1418ec3705e6d4a478a50205d610ce4d.png" width="2140" height="782" class="img_ev3q"></p>
<ul>
<li>게시글 하나에 여러 수록곡(song)이 포함되어 있으면, 각각의 수록곡마다 게시글 정보가 반복되어 반환됩니다.<br>
<!-- -->예시) 게시글 1에 수록곡 3개가 있다면, 동일한 게시글 정보가 3번 반복됨</li>
</ul>
</li>
<li>
<p>네트워크 사용량 증가</p>
<ul>
<li>데이터가 중복되어 전송되므로, 네트워크 사용량과 클라이언트 메모리 부담이 증가하며, 안드로이드 앱에서 파싱 및 가공하는 과정이 복잡해집니다.</li>
</ul>
</li>
<li>
<p>서버 마이그레이션 및 API 변경 시 추가 공수 발생</p>
<ul>
<li>서버 API는 일반적으로 계층적 구조로 데이터를 제공하므로, 이후 실제 서버로 마이그레이션시 수정이 불가피합니다.</li>
</ul>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="json-aggregation을-활용한-계층형-view-생성-방식">Json Aggregation을 활용한 계층형 View 생성 방식<a href="https://wepli.site/techblog/wepli-tech-blog-supabase-json#json-aggregation%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EA%B3%84%EC%B8%B5%ED%98%95-view-%EC%83%9D%EC%84%B1-%EB%B0%A9%EC%8B%9D" class="hash-link" aria-label="Direct link to Json Aggregation을 활용한 계층형 View 생성 방식" title="Direct link to Json Aggregation을 활용한 계층형 View 생성 방식">​</a></h3>
<p>관계형 DB에서 계층 구조로 데이터를 표현하는 방법 중 하나는 JSON을 이용하는 것입니다.</p>
<p>PostgreSQL의 JSON 함수(json_agg, json_build_object)를 활용하면 데이터베이스에서 미리 계층형 구조의 데이터를 만들어 클라이언트에 전달할 수 있습니다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="구현-예시">구현 예시<a href="https://wepli.site/techblog/wepli-tech-blog-supabase-json#%EA%B5%AC%ED%98%84-%EC%98%88%EC%8B%9C" class="hash-link" aria-label="Direct link to 구현 예시" title="Direct link to 구현 예시">​</a></h4>
<p>아래 코드는 각 게시글에 포함된 수록곡 정보를 JSON 배열로 집계하여, 게시글과 작성자 정보와 함께 계층형 데이터를 반환하는 View를 생성하는 예시입니다.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token keyword" style="color:hsl(301, 63%, 40%)">CREATE</span><span class="token plain"> </span><span class="token operator" style="color:hsl(221, 87%, 60%)">OR</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">REPLACE</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">VIEW</span><span class="token plain"> post_tree_view </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">as</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">WITH</span><span class="token plain"> song_agg </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      pbt</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">post_id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      json_agg</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        json_build_object</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token string" style="color:hsl(119, 34%, 47%)">'song_id'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token string" style="color:hsl(119, 34%, 47%)">'title'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">title</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token string" style="color:hsl(119, 34%, 47%)">'artist_name'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">artist_name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token string" style="color:hsl(119, 34%, 47%)">'album'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">album</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token string" style="color:hsl(119, 34%, 47%)">'cover_img'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">cover_img</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token string" style="color:hsl(119, 34%, 47%)">'href'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">href</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token string" style="color:hsl(119, 34%, 47%)">'duration_millis'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">duration_millis</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_list</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">FROM</span><span class="token plain"> post_bside_track pbt</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">LEFT</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">JOIN</span><span class="token plain"> song s </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">ON</span><span class="token plain"> pbt</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">song_id </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">BY</span><span class="token plain"> pbt</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">post_id</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">title </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_title</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">contents </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> post_contents</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    json_build_object</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token string" style="color:hsl(119, 34%, 47%)">'id'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token string" style="color:hsl(119, 34%, 47%)">'email'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">email</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token string" style="color:hsl(119, 34%, 47%)">'username'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">username</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token string" style="color:hsl(119, 34%, 47%)">'profile_img'</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">profile_img</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"user"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">COALESCE</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">song_list</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">'[]'</span><span class="token plain">::json</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">AS</span><span class="token plain"> song_list</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">FROM</span><span class="token plain"> posts p</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">LEFT</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">JOIN</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">public</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token keyword" style="color:hsl(301, 63%, 40%)">user</span><span class="token plain"> u </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">ON</span><span class="token plain"> p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">author </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> u</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">LEFT</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">JOIN</span><span class="token plain"> song_agg s </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">ON</span><span class="token plain"> p</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">id </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">post_id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>실제 출력 결과</strong></p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://wepli.site/assets/images/image_2-a7a20966ad636c7528b7b51bd34a953d.png" width="1829" height="529" class="img_ev3q"></p>
<p>리스트 형태의 데이터가 Json으로 하나의 필드에 포함된 것을 볼 수 있습니다.<br>
<!-- -->이렇게 불필요한 데이터 반복을 줄이고 필요한 데이터만 출력이 가능합니다.</p>
<p><strong>예시 응답 결과</strong></p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token property" style="color:hsl(5, 74%, 59%)">"post_id"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token number" style="color:hsl(35, 99%, 36%)">1</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token property" style="color:hsl(5, 74%, 59%)">"post_title"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"게시글 제목"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token property" style="color:hsl(5, 74%, 59%)">"post_contents"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"게시글 내용"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token property" style="color:hsl(5, 74%, 59%)">"user"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">     </span><span class="token property" style="color:hsl(5, 74%, 59%)">"id"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token number" style="color:hsl(35, 99%, 36%)">123</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">     </span><span class="token property" style="color:hsl(5, 74%, 59%)">"email"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"user@example.com"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">     </span><span class="token property" style="color:hsl(5, 74%, 59%)">"username"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"작성자닉네임"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">     </span><span class="token property" style="color:hsl(5, 74%, 59%)">"profile_img"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"이미지 URL"</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token property" style="color:hsl(5, 74%, 59%)">"song_list"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">     </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">       </span><span class="token property" style="color:hsl(5, 74%, 59%)">"song_id"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token number" style="color:hsl(35, 99%, 36%)">10</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">       </span><span class="token property" style="color:hsl(5, 74%, 59%)">"title"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"노래 제목"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">       </span><span class="token property" style="color:hsl(5, 74%, 59%)">"artist_name"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"아티스트 이름"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">       </span><span class="token property" style="color:hsl(5, 74%, 59%)">"album"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"앨범명"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">       </span><span class="token property" style="color:hsl(5, 74%, 59%)">"cover_img"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"커버 이미지 URL"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">       </span><span class="token property" style="color:hsl(5, 74%, 59%)">"href"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"노래 링크"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">       </span><span class="token property" style="color:hsl(5, 74%, 59%)">"duration_millis"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token number" style="color:hsl(35, 99%, 36%)">210000</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">     </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">     ...</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="안드로이드-입장에서의-json-기반-view-활용-장점">안드로이드 입장에서의 Json 기반 View 활용 장점<a href="https://wepli.site/techblog/wepli-tech-blog-supabase-json#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%9E%85%EC%9E%A5%EC%97%90%EC%84%9C%EC%9D%98-json-%EA%B8%B0%EB%B0%98-view-%ED%99%9C%EC%9A%A9-%EC%9E%A5%EC%A0%90" class="hash-link" aria-label="Direct link to 안드로이드 입장에서의 Json 기반 View 활용 장점" title="Direct link to 안드로이드 입장에서의 Json 기반 View 활용 장점">​</a></h3>
<ol>
<li>
<p>네트워크 효율성 (데이터 전송 최적화)</p>
<ul>
<li>중복 데이터 전송이 줄어들어 데이터 사용량이 절감됨</li>
<li>네트워크 비용 측면(데이터 사용량)에서도 효율적</li>
</ul>
</li>
<li>
<p>응답 매핑 로직 간소화</p>
<ul>
<li>Domain 모델의 구조와 API 응답 구조가 비슷할수록 매핑 로직이 간소화 됨</li>
<li>평면 데이터에서 계층 구조로의 재구성이 필요 없으므로 개발 생산성이 향상됨</li>
</ul>
</li>
<li>
<p>유지보수 및 확장성</p>
<ul>
<li>서버 API 변경이나 마이그레이션 시, 계층형 데이터 구조를 유지함으로써 클라이언트 코드 변경 부담이 줄어듦</li>
</ul>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="결론">결론<a href="https://wepli.site/techblog/wepli-tech-blog-supabase-json#%EA%B2%B0%EB%A1%A0" class="hash-link" aria-label="Direct link to 결론" title="Direct link to 결론">​</a></h3>
<p>Supabase와 PostgreSQL의 JSON Aggregation 기능을 활용하여 계층형 데이터를 미리 구성함으로써, 안드로이드 앱 개발에서 네트워크 최적화 및 클라이언트 로직 단순화라는 이점을 얻을 수 있었습니다.</p>
<p>서버 대신 Supabase를 이용해서 개발을 하시는 분들이 있다면 해당 글을 참고해서 활용해보시면 좋을 것 같습니다.</p>]]></content>
        <author>
            <name>Donghyeon Kim</name>
            <uri>https://github.com/dongx0915</uri>
        </author>
        <category label="WePLi" term="WePLi"/>
        <category label="MusicApp" term="MusicApp"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[WePLi 기술 블로그 소개]]></title>
        <id>https://wepli.site/techblog/wepli-tech-blog</id>
        <link href="https://wepli.site/techblog/wepli-tech-blog"/>
        <updated>2024-12-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[해당 블로그는 WePLi 개발 과정 중 기술적인 부분에 대해서 작성하기 위한 페이지입니다.]]></summary>
        <content type="html"><![CDATA[<p>해당 블로그는 WePLi 개발 과정 중 기술적인 부분에 대해서 작성하기 위한 페이지입니다.</p>
<p>개발 과정에 대한 내용 및 이슈 해결 과정 등을 기록하기 위한 블로그입니다.</p>
<p>그외 프로젝트 및 기획, UI/UX 등에 관한 내용은 Blog 탭에서 확인 할 수 있습니다.</p>
]]></content>
        <author>
            <name>Donghyeon Kim</name>
            <uri>https://github.com/dongx0915</uri>
        </author>
        <category label="WePLi" term="WePLi"/>
        <category label="MusicApp" term="MusicApp"/>
    </entry>
</feed>